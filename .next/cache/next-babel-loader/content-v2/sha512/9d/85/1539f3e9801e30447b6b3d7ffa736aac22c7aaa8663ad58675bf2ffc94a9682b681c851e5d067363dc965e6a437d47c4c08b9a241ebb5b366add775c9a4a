{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Image from 'next/image';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { usePlayer } from '../contexts/PlayerContext';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  const {\n    playList\n  } = usePlayer();\n  const episodeList = [...latestEpisodes, ...allEpisodes];\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Home | Podcastr\"\n      })\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \"\\xDAltimos Lan\\xE7amentos\"\n      }), /*#__PURE__*/_jsx(\"ul\", {\n        children: latestEpisodes.map((episode, index) => {\n          return /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsx(Image, {\n              width: 192,\n              height: 192,\n              src: episode.thumbnail,\n              alt: episode.title,\n              objectFit: \"cover\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.episodeDetails,\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: `/episodes/${episode.id}`,\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: episode.title\n                })\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: episode.members\n              }), /*#__PURE__*/_jsx(\"span\", {\n                children: episode.publishedAt\n              }), /*#__PURE__*/_jsx(\"span\", {\n                children: episode.durationAsString\n              })]\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: \"/play-green.svg\",\n                alt: \"Tocar epis\\xF3dio\",\n                onClick: () => playList(episodeList, index)\n              })\n            })]\n          }, episode.id);\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: styles.allEpisodes,\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \" Todos epis\\xF3dios\"\n      }), /*#__PURE__*/_jsxs(\"table\", {\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {}), /*#__PURE__*/_jsx(\"th\", {\n              children: \"Podcast\"\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: \"Integrantes\"\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: \"Data\"\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: \"Dura\\xE7\\xE3o\"\n            }), /*#__PURE__*/_jsx(\"th\", {})]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: allEpisodes.map((episode, index) => {\n            return /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                style: {\n                  width: 72\n                },\n                children: /*#__PURE__*/_jsx(Image, {\n                  width: 120,\n                  height: 120,\n                  src: episode.thumbnail,\n                  alt: episode.title,\n                  objectFit: \"cover\"\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: `/episodes/${episode.id}`,\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: episode.title\n                  })\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: episode.members\n              }), /*#__PURE__*/_jsx(\"td\", {\n                style: {\n                  width: 100\n                },\n                children: episode.publishedAt\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: episode.durationAsString\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"button\",\n                  onClick: () => playList(episodeList, index + latestEpisodes.length),\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/play-green.svg\",\n                    alt: \"Tocar epis\\xF3dio\"\n                  })\n                })\n              })]\n            }, episode.id);\n          })\n        })]\n      })]\n    })]\n  });\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":null,"metadata":{},"sourceType":"module"}