{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\nwl\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.episodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Projetos/nwl/podcastrnext/src/pages/index.tsx"],"names":["Home","props","JSON","stringify","episodes"],"mappings":";;;;AAuBA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,QAArB;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;KATuBJ,I","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string,\n  description: string,\n  members: string;\n  duration: number,\n  durationAsString: string,\n  published_at: string;\n  url: string,\n  publishedAt: string\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n  return (\n    <>\n      <h1>Index</h1>\n      <p>\n        {JSON.stringify(props.episodes)}\n      </p>\n    </>\n  )\n}\n\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc',\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    }\n  })\n\n  return {\n    props: {\n      episodes: episodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}"]},"metadata":{},"sourceType":"module"}