{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projetos\\\\nwl\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useEffect, useRef, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function (event) {\n      setProgress(audioRef.current.currentTime);\n    });\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando Agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f57ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onLoadedMetadata: setupProgressListener,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          className: styles.playButton,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasNext,\n          onClick: playNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"t1pbgFGQx51nUupxIsq1DIZm7/I=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Projetos/nwl/podcastrnext/src/components/Player/index.tsx"],"names":["Image","useEffect","useRef","useState","usePlayer","Slider","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","event","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","backgroundColor","borderColor","borderWidth","emptySlider","duration","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { usePlayer } from '../../contexts/PlayerContext';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nexport function Player() {\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n\r\n  const {\r\n    episodeList,\r\n    currentEpisodeIndex,\r\n    isPlaying,\r\n    isLooping,\r\n    isShuffling,\r\n    togglePlay,\r\n    toggleLoop,\r\n    toggleShuffle,\r\n    setPlayingState,\r\n    playNext,\r\n    playPrevious,\r\n    hasNext,\r\n    hasPrevious\r\n  } = usePlayer();\r\n\r\n  useEffect(() => {\r\n    if (!audioRef.current) {\r\n      return;\r\n    }\r\n\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n\r\n  }, [isPlaying]);\r\n\r\n  function setupProgressListener() {\r\n    audioRef.current.currentTime = 0;\r\n    audioRef.current.addEventListener('timeupdate', event => {\r\n      setProgress(audioRef.current.currentTime);\r\n    });\r\n  }\r\n\r\n  const episode = episodeList[currentEpisodeIndex];\r\n\r\n\r\n  return (\r\n    <div className={styles.playerContainer}>\r\n      <header>\r\n        <img src=\"/playing.svg\" alt=\"Tocando Agora\" />\r\n        <strong>Tocando agora</strong>\r\n      </header>\r\n\r\n\r\n      { episode ? (\r\n        <div className={styles.currentEpisode}>\r\n          <Image\r\n            width={592}\r\n            height={592}\r\n            src={episode.thumbnail}\r\n            objectFit=\"cover\"\r\n          />\r\n          <strong>{episode.title}</strong>\r\n          <span>{episode.members}</span>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.emptyPlayer}>\r\n          <strong>Selecione um podcast para ouvir</strong>\r\n        </div>\r\n\r\n      )\r\n      }\r\n\r\n\r\n      <footer className={!episode ? styles.empty : ''}>\r\n        <div className={styles.progress}>\r\n          <span>{convertDurationToTimeString(progress)}</span>\r\n          <div className={styles.slider}>\r\n\r\n\r\n            {episode ? (\r\n              <Slider\r\n                trackStyle={{ backgroundColor: '#04d361' }}\r\n                railStyle={{ backgroundColor: '#9f57ff' }}\r\n                handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\r\n              />\r\n            ) : (\r\n              <div className={styles.emptySlider} />\r\n            )}\r\n          </div>\r\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n        </div>\r\n        {episode && (\r\n          <audio\r\n            src={episode.url}\r\n            ref={audioRef}\r\n            loop={isLooping}\r\n            autoPlay\r\n            onLoadedMetadata={setupProgressListener}\r\n            onPlay={() => setPlayingState(true)}\r\n            onPause={() => setPlayingState(false)}\r\n          />\r\n        )}\r\n\r\n        <div className={styles.buttons}>\r\n          <button\r\n            type=\"button\"\r\n            disabled={!episode || episodeList.length === 1}\r\n            onClick={toggleShuffle}\r\n            className={isShuffling ? styles.isActive : ''}\r\n          >\r\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\r\n          </button>\r\n          <button type=\"button\" disabled={!episode || !hasPrevious} onClick={playPrevious}>\r\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\r\n          </button>\r\n          <button type=\"button\" disabled={!episode} className={styles.playButton} onClick={togglePlay}>\r\n            {isPlaying\r\n              ? <img src=\"/pause.svg\" alt=\"Pausar\" />\r\n              : <img src=\"/play.svg\" alt=\"Tocar\" />}\r\n          </button>\r\n          <button type=\"button\" disabled={!episode || !hasNext} onClick={playNext}>\r\n            <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            disabled={!episode}\r\n            onClick={toggleLoop}\r\n            className={isLooping ? styles.isActive : ''}\r\n          >\r\n            <img src=\"/repeat.svg\" alt=\"Repetir\" />\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div >\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}