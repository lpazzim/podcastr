{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\nwl\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", episode.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["C:/Projetos/nwl/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","Episode","episode","router","title","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAoBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4C;AACzD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACE;AAAA,2BACE;AAAA,sBAAMI,OAAO,CAACE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMb,GAAG,CAACc,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAGA,QAAMR,OAAO,GAAG;AACdY,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEdV,IAAAA,KAAK,EAAEQ,IAAI,CAACR,KAFE;AAGdW,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHF;AAIdC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJA;AAKdC,IAAAA,WAAW,EAAEtB,MAAM,CAACC,QAAQ,CAACgB,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAEtB;AAAV,KAA1C,CALL;AAMduB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CANF;AAOdG,IAAAA,gBAAgB,EAAEvB,2BAA2B,CAACqB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAP/B;AAQdI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WARJ;AASdC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AATD,GAAhB;AAYA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLxB,MAAAA;AADK,KADF;AAILyB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAJjB,CAIoB;;AAJpB,GAAP;AAMD,CAvBM","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\n\r\ntype Episode = {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string,\r\n  members: string;\r\n  duration: number,\r\n  durationAsString: string,\r\n  published_at: string;\r\n  url: string,\r\n  publishedAt: string,\r\n  description: string\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div>\r\n      <h1> {episode.title}</h1>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking'\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const { slug } = ctx.params;\r\n  const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    thumbnail: data.thumbnail,\r\n    members: data.members,\r\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n    duration: Number(data.file.duration),\r\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n    description: data.description,\r\n    url: data.file.url,\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      episode,\r\n    },\r\n    revalidate: 60 * 60 * 24 // 24 hours\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}