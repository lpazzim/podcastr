{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projetos\\\\nwl\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport styles from './episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", episode.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Projetos/nwl/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["useRouter","styles","Episode","episode","router","title"],"mappings":";;;;;AAGA,SAASA,SAAT,QAA0B,aAA1B;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;;AAoBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AACzD,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACE,OAAvB;AAAA,2BACE;AAAA,sBAAMA,OAAO,CAACE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GATuBH,O;UACPF,S;;;KADOE,O","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport styles from './episode.module.scss';\r\n\r\n\r\ntype Episode = {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string,\r\n  members: string;\r\n  duration: number,\r\n  durationAsString: string,\r\n  published_at: string;\r\n  url: string,\r\n  publishedAt: string,\r\n  description: string\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className={styles.episode}>\r\n      <h1> {episode.title}</h1>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking'\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const { slug } = ctx.params;\r\n  const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    thumbnail: data.thumbnail,\r\n    members: data.members,\r\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n    duration: Number(data.file.duration),\r\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n    description: data.description,\r\n    url: data.file.url,\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      episode,\r\n    },\r\n    revalidate: 60 * 60 * 24 // 24 hours\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}